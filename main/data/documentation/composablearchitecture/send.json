{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"]}],"abstract":[{"text":"A type that can send actions back into the system when used from","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)","type":"reference","isActive":true},{"type":"text","text":"."}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Send"}],"roleHeading":"Structure","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Send"}],"externalID":"s:22ComposableArchitecture4SendV","title":"Send","symbolKind":"struct","role":"symbol"},"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/init(send:)"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:animation:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:transaction:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Send"},{"text":"<","kind":"text"},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This type implements "},{"type":"reference","identifier":"https:\/\/docs.swift.org\/swift-book\/ReferenceManual\/Declarations.html#ID622","isActive":true},{"type":"text","text":" so that you invoke it as a function"},{"text":" ","type":"text"},{"text":"rather than calling methods on it:","type":"text"}],"type":"paragraph"},{"code":["return .run { send in","  await send(.started)","  for await event in self.events {","    send(.event(event))","  }","  await send(.finished)","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"You can also send actions with animation and transaction:","type":"text"}]},{"code":["await send(.started, animation: .spring())","await send(.finished, transaction: .init(animation: .default))"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)"},{"text":" for more information on how to","type":"text"},{"type":"text","text":" "},{"text":"use this value to construct effects that can emit any number of times in an asynchronous","type":"text"},{"type":"text","text":" "},{"type":"text","text":"context."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/send"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send/callAsFunction(_:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Sends an action back into the system from an effect."}],"url":"\/documentation\/composablearchitecture\/send\/callasfunction(_:)","title":"callAsFunction(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send/callAsFunction(_:animation:)":{"abstract":[{"text":"Sends an action back into the system from an effect with animation.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callAsFunction"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"animation"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9AnimationV","text":"Animation"},{"text":"?)","kind":"text"}],"title":"callAsFunction(_:animation:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:animation:)","url":"\/documentation\/composablearchitecture\/send\/callasfunction(_:animation:)","type":"topic"},"https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID622":{"identifier":"https:\/\/docs.swift.org\/swift-book\/ReferenceManual\/Declarations.html#ID622","title":"callAsFunction","url":"https:\/\/docs.swift.org\/swift-book\/ReferenceManual\/Declarations.html#ID622","type":"link","titleInlineContent":[{"type":"codeVoice","code":"callAsFunction"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send/init(send:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"send"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"role":"symbol","title":"init(send:)","url":"\/documentation\/composablearchitecture\/send\/init(send:)","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/init(send:)","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send/callAsFunction(_:transaction:)":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Sends an action back into the system from an effect with transaction."}],"title":"callAsFunction(_:transaction:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send\/callAsFunction(_:transaction:)","url":"\/documentation\/composablearchitecture\/send\/callasfunction(_:transaction:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"transaction"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11TransactionV","text":"Transaction"},{"kind":"text","text":")"}],"type":"topic"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Send":{"abstract":[{"text":"A type that can send actions back into the system when used from","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Send","kind":"identifier"}],"title":"Send","kind":"symbol","navigatorTitle":[{"text":"Send","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Send","url":"\/documentation\/composablearchitecture\/send","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect/run(priority:operation:catch:fileID:filePath:line:column:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect\/run(priority:operation:catch:fileID:filePath:line:column:)","abstract":[{"text":"Wraps an asynchronous unit of work that can emit actions any number of times in an effect.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"run","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"priority"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:ScP","text":"TaskPriority","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"operation"},{"kind":"text","text":": ("},{"text":"Send","preciseIdentifier":"s:22ComposableArchitecture4SendV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Action","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"catch","kind":"externalParam"},{"text":": ((any ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Send","preciseIdentifier":"s:22ComposableArchitecture4SendV"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":")?, "},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"text":"filePath","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Effect","preciseIdentifier":"s:22ComposableArchitecture6EffectV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/effect\/run(priority:operation:catch:fileid:filepath:line:column:)","type":"topic","role":"symbol","title":"run(priority:operation:catch:fileID:filePath:line:column:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}