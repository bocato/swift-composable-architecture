{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"focusedSceneObject","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"object","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"text":"ObservableObject","preciseIdentifier":"s:7Combine16ObservableObjectP","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE18focusedSceneObjectyQrqd__7Combine010ObservableF0Rd__lF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","title":"focusedSceneObject(_:)","role":"symbol","platforms":[{"beta":false,"introducedAt":"16.0","unavailable":false,"name":"iOS","deprecated":false},{"deprecated":false,"beta":false,"name":"macOS","introducedAt":"13.0","unavailable":false},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"16.0"},{"deprecated":false,"introducedAt":"9.0","name":"watchOS","beta":false,"unavailable":false}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"focusedSceneObject","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"extendedModule":"SwiftUICore","roleHeading":"Instance Method"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/focusedSceneObject(_:)-x0sm"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"View.focusedSceneObject(_:)","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/focusedsceneobject(_:)-x0sm"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"text":" views.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"title":"SwitchStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","abstract":[],"kind":"article","title":"View Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/focusedSceneObject(_:)-x0sm":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/focusedSceneObject(_:)-x0sm","title":"focusedSceneObject(_:)","url":"\/documentation\/composablearchitecture\/caselet\/focusedsceneobject(_:)-x0sm","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"focusedSceneObject"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"abstract":[],"kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}