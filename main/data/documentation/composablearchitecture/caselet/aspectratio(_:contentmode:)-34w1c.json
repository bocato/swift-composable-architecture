{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.aspectRatio(_:contentMode:)"},{"text":".","type":"text"}],"metadata":{"title":"aspectRatio(_:contentMode:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"externalID":"s:7SwiftUI4ViewPAAE11aspectRatio_11contentModeQrSo6CGSizeV_AA07ContentG0OtF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"aspectRatio"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"CGSize","preciseIdentifier":"c:@S@CGSize"},{"kind":"text","text":", "},{"text":"contentMode","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ContentMode","preciseIdentifier":"s:7SwiftUI11ContentModeO"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"extendedModule":"SwiftUICore","platforms":[{"name":"iOS","unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false},{"deprecated":false,"name":"macOS","unavailable":false,"introducedAt":"10.15","beta":false},{"name":"tvOS","introducedAt":"13.0","beta":false,"unavailable":false,"deprecated":false},{"unavailable":false,"beta":false,"name":"watchOS","deprecated":false,"introducedAt":"6.0"}],"roleHeading":"Instance Method","role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"aspectRatio"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"aspectRatio"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@S@CGSize","kind":"typeIdentifier","text":"CGSize"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"contentMode"},{"text":": ","kind":"text"},{"text":"ContentMode","preciseIdentifier":"s:7SwiftUI11ContentModeO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/aspectRatio(_:contentMode:)-34w1c","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/caselet\/aspectratio(_:contentmode:)-34w1c"]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"text":" views.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"title":"SwitchStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","abstract":[],"kind":"article","title":"View Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/aspectRatio(_:contentMode:)-34w1c":{"abstract":[],"kind":"symbol","type":"topic","role":"symbol","title":"aspectRatio(_:contentMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"aspectRatio"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"CGSize","preciseIdentifier":"c:@S@CGSize"},{"text":", ","kind":"text"},{"text":"contentMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ContentModeO","text":"ContentMode"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/aspectRatio(_:contentMode:)-34w1c","url":"\/documentation\/composablearchitecture\/caselet\/aspectratio(_:contentmode:)-34w1c"}}}