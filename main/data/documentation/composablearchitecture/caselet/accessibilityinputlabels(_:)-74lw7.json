{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"accessibilityInputLabels","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"inputLabelKeys","kind":"internalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"LocalizedStringKey","preciseIdentifier":"s:7SwiftUI18LocalizedStringKeyV"},{"kind":"text","text":"]) -> "},{"preciseIdentifier":"s:7SwiftUI15ModifiedContentV","kind":"typeIdentifier","text":"ModifiedContent"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AccessibilityAttachmentModifier","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"platforms":[{"unavailable":false,"beta":false,"introducedAt":"14.0","deprecated":false,"name":"iOS"},{"deprecated":false,"introducedAt":"11.0","beta":false,"unavailable":false,"name":"macOS"},{"unavailable":false,"name":"tvOS","introducedAt":"14.0","deprecated":false,"beta":false},{"deprecated":false,"introducedAt":"7.0","beta":false,"unavailable":false,"name":"watchOS"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"accessibilityInputLabels","kind":"identifier"},{"kind":"text","text":"(["},{"text":"LocalizedStringKey","preciseIdentifier":"s:7SwiftUI18LocalizedStringKeyV","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI15ModifiedContentV","kind":"typeIdentifier","text":"ModifiedContent"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AccessibilityAttachmentModifier","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV"},{"kind":"text","text":">"}],"role":"symbol","title":"accessibilityInputLabels(_:)","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"extendedModule":"SwiftUICore","externalID":"s:7SwiftUI4ViewPAAE24accessibilityInputLabelsyAA15ModifiedContentVyxAA31AccessibilityAttachmentModifierVGSayAA18LocalizedStringKeyVGF::SYNTHESIZED::s:22ComposableArchitecture7CaseLetV","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/composablearchitecture\/caselet\/accessibilityinputlabels(_:)-74lw7"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/accessibilityInputLabels(_:)-74lw7","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"View.accessibilityInputLabels(_:)"},{"type":"text","text":"."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/accessibilityInputLabels(_:)-74lw7":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/accessibilityInputLabels(_:)-74lw7","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"accessibilityInputLabels","kind":"identifier"},{"text":"([","kind":"text"},{"text":"LocalizedStringKey","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI18LocalizedStringKeyV"},{"text":"]) -> ","kind":"text"},{"text":"ModifiedContent","preciseIdentifier":"s:7SwiftUI15ModifiedContentV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AccessibilityAttachmentModifier","preciseIdentifier":"s:7SwiftUI31AccessibilityAttachmentModifierV"},{"kind":"text","text":">"}],"title":"accessibilityInputLabels(_:)","abstract":[],"url":"\/documentation\/composablearchitecture\/caselet\/accessibilityinputlabels(_:)-74lw7","type":"topic","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"text":" views.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"title":"SwitchStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet/View-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/caselet\/view-implementations","abstract":[],"kind":"article","title":"View Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet\/View-Implementations","role":"collectionGroup"}}}