{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"PersistenceKeyDefault"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceKeyDefault","kind":"identifier"}],"role":"symbol","externalID":"s:22ComposableArchitecture21PersistenceKeyDefaultV","roleHeading":"Structure","title":"PersistenceKeyDefault","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PersistenceKeyDefault","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Base","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":" : ","kind":"text"},{"text":"PersistenceReaderKey","kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"Use this persistence key when constructing type-safe keys (see","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys"},{"text":" for more info) to provide a default that is used instead of","type":"text"},{"type":"text","text":" "},{"text":"providing one at the call site of using ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","isActive":true,"overridingTitle":"@Shared","overridingTitleInlineContent":[{"type":"codeVoice","code":"@Shared"}],"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example, if an ","type":"text"},{"type":"codeVoice","code":"isOn"},{"type":"text","text":" value is backed by user defaults and it should default to "},{"type":"codeVoice","code":"false"},{"text":" when","type":"text"},{"type":"text","text":" "},{"text":"there is no value in user defaults, then you can define a persistence key like so:","type":"text"}]},{"code":["extension PersistenceReaderKey where Self == PersistenceKeyDefault<AppStorageKey<Bool>> {","  static var isOn: Self {","    PersistenceKeyDefault(.appStorage(\"isOn\"), false)","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"And then use it like so:"}]},{"code":["struct State {","  @Shared(.isOn) var isOn","}"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/persistencekeydefault"]}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/init(_:_:)"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/id"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/load(initialValue:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/subscribe(initialValue:didSet:)"],"anchor":"Instance-Methods","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceKey-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceReaderKey-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"abstract":[{"type":"text","text":"A persistence key that provides a default value to an existing persistence key."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/subscribe(initialValue:didSet:)":{"kind":"symbol","role":"symbol","title":"subscribe(initialValue:didSet:)","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/subscribe(initialvalue:didset:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subscribe"},{"text":"(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"didSet","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Shared","preciseIdentifier":"s:22ComposableArchitecture6SharedV"},{"text":"<","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"text":">.","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture6SharedV12SubscriptionC","text":"Subscription","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/subscribe(initialValue:didSet:)","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/PersistenceKey-Implementations":{"kind":"article","type":"topic","abstract":[],"title":"PersistenceKey Implementations","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceKey-Implementations","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/persistencekey-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A persistence key that provides a default value to an existing persistence key."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistenceKeyDefault"}],"title":"PersistenceKeyDefault","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKeyDefault"}],"url":"\/documentation\/composablearchitecture\/persistencekeydefault"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/id":{"kind":"symbol","role":"symbol","title":"id","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ID","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP2IDQa"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/id","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Type-safe-keys":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Type-safe-keys","kind":"section","type":"topic","url":"\/documentation\/composablearchitecture\/sharingstate#Type-safe-keys","abstract":[],"title":"Type-safe keys"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"kind":"symbol","role":"symbol","title":"PersistenceKey","url":"\/documentation\/composablearchitecture\/persistencekey","navigatorTitle":[{"text":"PersistenceKey","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceKey","kind":"identifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"PersistenceKey","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","type":"topic","abstract":[{"text":"A type that can persist shared state to an external storage.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/init(_:_:)":{"url":"\/documentation\/composablearchitecture\/persistencekeydefault\/init(_:_:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":"."},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"text":")","kind":"text"}],"title":"init(_:_:)","abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/init(_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"conformance":{"constraints":[{"code":"Base","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PersistenceKey"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"navigatorTitle":[{"text":"PersistenceReaderKey","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"A type that can load and subscribe to state in an external system.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistenceReaderKey","kind":"identifier"}],"title":"PersistenceReaderKey","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","url":"\/documentation\/composablearchitecture\/persistencereaderkey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"title":"Shared","abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"topic","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","title":"Sharing state","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/load(initialValue:)":{"kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"text":"?) -> ","kind":"text"},{"text":"Base","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"load(initialValue:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/load(initialValue:)","url":"\/documentation\/composablearchitecture\/persistencekeydefault\/load(initialvalue:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault/PersistenceReaderKey-Implementations":{"url":"\/documentation\/composablearchitecture\/persistencekeydefault\/persistencereaderkey-implementations","role":"collectionGroup","type":"topic","title":"PersistenceReaderKey Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault\/PersistenceReaderKey-Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","role":"symbol"},"doc://ComposableArchitecture/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"}}}