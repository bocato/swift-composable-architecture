{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage"},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InMemoryStorage"}],"symbolKind":"struct","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"text":"InMemoryStorage","kind":"identifier"}],"externalID":"s:22ComposableArchitecture15InMemoryStorageV","title":"InMemoryStorage","roleHeading":"Structure","role":"symbol"},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage\/init()"],"title":"Initializers","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage\/Equatable-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To"}],"sections":[],"seeAlsoSections":[{"anchor":"Overriding-storage","title":"Overriding storage","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultInMemoryStorage"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InMemoryStorage","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/inmemorystorage"]}],"references":{"doc://ComposableArchitecture/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","title":"InMemoryKey","url":"\/documentation\/composablearchitecture\/inmemorykey","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"InMemoryKey","kind":"identifier"}],"abstract":[{"text":"A type defining an in-memory persistence strategy","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"InMemoryKey"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryStorage":{"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage","url":"\/documentation\/composablearchitecture\/inmemorystorage","title":"InMemoryStorage","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InMemoryStorage","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InMemoryStorage"}],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryStorage/init()":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage\/init()","kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/inmemorystorage\/init()","title":"init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/defaultInMemoryStorage":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultInMemoryStorage","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/defaultinmemorystorage","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"defaultInMemoryStorage","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture15InMemoryStorageV","text":"InMemoryStorage"}],"abstract":[],"role":"symbol","type":"topic","title":"defaultInMemoryStorage","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryStorage/Equatable-Implementations":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryStorage\/Equatable-Implementations","kind":"article","abstract":[],"url":"\/documentation\/composablearchitecture\/inmemorystorage\/equatable-implementations","role":"collectionGroup","title":"Equatable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","title":"Sharing state","role":"collectionGroup"}}}