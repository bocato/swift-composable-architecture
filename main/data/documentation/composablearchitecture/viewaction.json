{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewAction"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture10ViewActionPABQa","text":"ViewAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction\/ViewAction"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"See the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","isActive":true},{"type":"text","text":" macro for more information on how to use this."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/viewaction"]}],"sections":[],"abstract":[{"type":"text","text":"Defines the actions that can be sent from a view."}],"topicSections":[{"anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction\/ViewAction"],"title":"Associated Types"},{"generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction\/view(_:)"],"title":"Type Methods"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending"],"title":"View actions","generated":true,"anchor":"View-actions"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action"]]},"metadata":{"externalID":"s:22ComposableArchitecture10ViewActionP","role":"symbol","navigatorTitle":[{"text":"ViewAction","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"}],"symbolKind":"protocol","modules":[{"name":"ComposableArchitecture"}],"title":"ViewAction","roleHeading":"Protocol"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction(for:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewAction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":".Type)"}],"url":"\/documentation\/composablearchitecture\/viewaction(for:)","type":"topic","title":"ViewAction(for:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction(for:)","abstract":[{"text":"Provides a view with access to a featureâ€™s ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction"},{"type":"text","text":"s."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"url":"\/documentation\/composablearchitecture\/reducer\/state","role":"symbol","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"State"}],"title":"State","type":"topic","abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewActionSending":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewActionSending","url":"\/documentation\/composablearchitecture\/viewactionsending","abstract":[{"text":"A type that represents a view with a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"reference"},{"text":" that can send ","type":"text"},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","isActive":true},{"type":"text","text":"s."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewActionSending"}],"navigatorTitle":[{"kind":"identifier","text":"ViewActionSending"}],"type":"topic","kind":"symbol","title":"ViewActionSending"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction":{"type":"topic","url":"\/documentation\/composablearchitecture\/viewaction","abstract":[{"type":"text","text":"Defines the actions that can be sent from a view."}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction","title":"ViewAction","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewAction"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewAction","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/Action":{"title":"Action","abstract":[{"text":"A type that holds all possible actions that cause the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","isActive":true,"type":"reference"},{"type":"text","text":" of the reducer to change"},{"type":"text","text":" "},{"type":"text","text":"and\/or kick off a side "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":" that can communicate with the outside world."}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Action","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/Action","required":true,"url":"\/documentation\/composablearchitecture\/reducer\/action","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/store","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol","title":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction/ViewAction":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction\/ViewAction","type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/composablearchitecture\/viewaction\/viewaction","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ViewAction"}],"title":"ViewAction","required":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewAction/view(_:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/viewaction\/view(_:)","abstract":[],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewAction\/view(_:)","title":"view(_:)","required":true,"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"view","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction","preciseIdentifier":"s:22ComposableArchitecture10ViewActionPABQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}