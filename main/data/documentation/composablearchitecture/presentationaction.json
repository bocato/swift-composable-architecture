{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"enum","externalID":"s:22ComposableArchitecture18PresentationActionO","title":"PresentationAction","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PresentationAction"}],"navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"roleHeading":"Enumeration"},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ComposableArchitecture\/9CasePaths0A8PathableP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/Se","doc:\/\/ComposableArchitecture\/SE","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/presentationaction"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)"],"generated":true,"anchor":"Enumeration-Cases","title":"Enumeration Cases"},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/CasePathable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/Decodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/Equatable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationAction"},{"text":"<","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Use this wrapper type for modeling a feature’s domain that needs to present a child"},{"text":" ","type":"text"},{"type":"text","text":"feature using "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, if you have a "},{"type":"codeVoice","code":"ChildFeature"},{"type":"text","text":" reducer that encapsulates the logic and behavior"},{"type":"text","text":" "},{"text":"for a feature, then any feature that wants to present that feature will hold onto","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChildFeature.Action"},{"text":" like so:","type":"text"}],"type":"paragraph"},{"code":["@Reducer","struct ParentFeature {","  \/\/ ...","  enum Action {","    case child(PresentationAction<ChildFeature.Action>)","     \/\/ ...","  }","  \/\/ ...","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},{"type":"text","text":" enum has two cases that represent the two fundamental operations"},{"text":" ","type":"text"},{"type":"text","text":"you can do when presenting a child feature: "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)","isActive":true,"type":"reference"},{"text":" represents","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an action happening "},{"inlineContent":[{"text":"inside","type":"text"}],"type":"emphasis"},{"type":"text","text":" the child feature, and "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","isActive":true},{"type":"text","text":" represents"},{"type":"text","text":" "},{"type":"text","text":"dismissing the child feature by "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"-ing its state."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"See the dedicated article on ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","type":"reference"},{"type":"text","text":" for more information on the library’s navigation"},{"type":"text","text":" "},{"type":"text","text":"tools, and in particular see "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation"},{"type":"text","text":" for information on modeling navigation"},{"text":" ","type":"text"},{"text":"using optionals and enums.","type":"text"}]}],"kind":"content"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"],"generated":true,"anchor":"Tree-based-navigation","title":"Tree-based navigation"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"]]},"abstract":[{"text":"A wrapper type for actions that can be presented.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/CasePathable-Implementations":{"type":"topic","abstract":[],"title":"CasePathable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/CasePathable-Implementations","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/presentationaction\/casepathable-implementations","kind":"article"},"doc://ComposableArchitecture/Se":{"identifier":"doc:\/\/ComposableArchitecture\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://ComposableArchitecture/SE":{"identifier":"doc:\/\/ComposableArchitecture\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","title":"Navigation","kind":"article","url":"\/documentation\/composablearchitecture\/navigation","abstract":[{"text":"Learn how to use the navigation tools in the library, including how to best model your domains, how","type":"text"},{"type":"text","text":" "},{"text":"to integrate features in the reducer and view layers, and how to write tests.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Presents()":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Presents"},{"text":"()","kind":"text"}],"role":"symbol","title":"Presents()","abstract":[{"type":"text","text":"Wraps a property with "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"type":"text","text":" and observes it."}],"url":"\/documentation\/composablearchitecture\/presents()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","type":"topic","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/Equatable-Implementations":{"url":"\/documentation\/composablearchitecture\/presentationaction\/equatable-implementations","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/Equatable-Implementations","role":"collectionGroup","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/Decodable-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","abstract":[],"title":"Decodable Implementations","url":"\/documentation\/composablearchitecture\/presentationaction\/decodable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/Decodable-Implementations"},"doc://ComposableArchitecture/SH":{"identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","title":"PresentationAction.dismiss","role":"symbol","abstract":[{"text":"An action sent to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" out the associated presentation state.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dismiss","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/presented(_:)":{"type":"topic","abstract":[{"text":"An action sent to the associated, non-","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" presentation state."}],"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"presented"},{"kind":"text","text":"("},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/presented(_:)","title":"PresentationAction.presented(_:)","url":"\/documentation\/composablearchitecture\/presentationaction\/presented(_:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationAction"}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction","title":"PresentationAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PresentationState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","kind":"symbol","navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate","title":"PresentationState"},"doc://ComposableArchitecture/9CasePaths0A8PathableP":{"identifier":"doc:\/\/ComposableArchitecture\/9CasePaths0A8PathableP","title":"CasePaths.CasePathable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","abstract":[{"type":"text","text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"url":"\/documentation\/composablearchitecture\/treebasednavigation","role":"article","title":"Tree-based navigation","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","title":"ifLet(_:action:destination:fileID:filePath:line:column:)","url":"\/documentation\/composablearchitecture\/reducer\/iflet(_:action:destination:fileid:filepath:line:column:)-4ub6q","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Embeds a child reducer in a parent domain that works on an optional property of parent state."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"DestinationState"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Destination"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa","text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"PresentationState","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A7KeyPatha","text":"CaseKeyPath"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Action","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"text":">>, ","kind":"text"},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": () -> "},{"text":"Destination","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"fileID"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"column"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"Reducer","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture7ReducerP5StateQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture7ReducerP6ActionQa","kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">\n"}]},"doc://ComposableArchitecture/SQ":{"identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://ComposableArchitecture/s8CopyableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}