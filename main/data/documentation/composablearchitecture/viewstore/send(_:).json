{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"kind":"text","text":": "},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"action","content":[{"inlineContent":[{"text":"An action.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","isActive":true},{"type":"text","text":" that represents the lifecycle of the effect executed when"},{"text":" ","type":"text"},{"type":"text","text":"sending the action."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method returns a ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","type":"reference","isActive":true},{"text":", which represents the lifecycle of the effect started","type":"text"},{"type":"text","text":" "},{"text":"from sending an action. You can use this value to tie the effect’s lifecycle ","type":"text"},{"inlineContent":[{"text":"and","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"type":"text","text":"cancellation to an asynchronous context, such as SwiftUI’s "},{"type":"codeVoice","code":"task"},{"type":"text","text":" view modifier:"}]},{"type":"codeListing","code":[".task { await viewStore.send(.task).finish() }"],"syntax":"swift"},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true,"type":"reference"},{"type":"text","text":" is not thread safe and you should only send actions to it from the"},{"text":" ","type":"text"},{"type":"text","text":"main thread. If you want to send actions on background threads due to the fact that the"},{"type":"text","text":" "},{"type":"text","text":"reducer is performing computationally expensive work, then a better way to handle this is to"},{"type":"text","text":" "},{"type":"text","text":"wrap that work in an "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true,"type":"reference"},{"type":"text","text":" that is performed on a background thread so that the"},{"text":" ","type":"text"},{"type":"text","text":"result can be fed back into the store."}]}],"name":"Important"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/viewstore\/send(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use '@ObservableState', instead. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Using-ObservableState"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","roleHeading":"Instance Method","externalID":"s:22ComposableArchitecture9ViewStoreC4sendyAA0D4TaskVq_F","platforms":[],"symbolKind":"method","title":"send(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"send"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ViewAction"},{"kind":"text","text":") -> "},{"text":"StoreTask","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV","kind":"typeIdentifier"}],"modules":[{"name":"ComposableArchitecture"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Sending actions","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)"],"anchor":"Sending-actions"}],"abstract":[{"type":"text","text":"Sends an action to the store."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"type":"text","text":" "},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"type":"text","text":" "},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"role":"symbol","deprecated":true,"url":"\/documentation\/composablearchitecture\/viewstore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ViewStore","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"kind":"symbol","title":"ViewStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/send(_:)":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","kind":"symbol","abstract":[{"text":"Sends an action to the store.","type":"text"}],"title":"send(_:)","url":"\/documentation\/composablearchitecture\/store\/send(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":") -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StoreTask":{"title":"StoreTask","url":"\/documentation\/composablearchitecture\/storetask","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"StoreTask"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"StoreTask"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StoreTask","abstract":[{"type":"text","text":"The type returned from "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/send(_:)","isActive":true,"type":"reference"},{"text":" that represents the lifecycle of the effect","type":"text"},{"type":"text","text":" "},{"text":"started from sending an action.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:while:)":{"title":"send(_:while:)","abstract":[{"text":"Sends an action into the store and then suspends while a piece of state is ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"ViewState","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:while:)","kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:while:)","deprecated":true,"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/send(_:)":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/send(_:)","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"Sends an action to the store."}],"title":"send(_:)","url":"\/documentation\/composablearchitecture\/viewstore\/send(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"send","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ViewAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"StoreTask","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture9StoreTaskV"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/yield(while:)":{"deprecated":true,"type":"topic","url":"\/documentation\/composablearchitecture\/viewstore\/yield(while:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/yield(while:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Suspends the current task while a predicate on state is "},{"code":"true","type":"codeVoice"},{"type":"text","text":"."}],"title":"yield(while:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"yield"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"ViewState"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"}}}