{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preference","kind":"identifier"},{"text":"<","kind":"text"},{"text":"K","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":".Type = K.self, "},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13PreferenceKeyP5ValueQa"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"PreferenceKey","preciseIdentifier":"s:7SwiftUI13PreferenceKeyP","kind":"typeIdentifier"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"preference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"K"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"text":"K","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13PreferenceKeyP5ValueQa","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"title":"preference(key:value:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE10preference3key5valueQrqd__m_5ValueQyd__tAA13PreferenceKeyRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","extendedModule":"SwiftUICore","role":"symbol","modules":[{"relatedModules":["SwiftUICore"],"name":"ComposableArchitecture"}],"platforms":[{"name":"iOS","unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false},{"unavailable":false,"beta":false,"introducedAt":"10.15","deprecated":false,"name":"macOS"},{"deprecated":false,"beta":false,"introducedAt":"13.0","name":"tvOS","unavailable":false},{"unavailable":false,"introducedAt":"6.0","deprecated":false,"name":"watchOS","beta":false}]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.preference(key:value:)","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/preference(key:value:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/ifletstore\/preference(key:value:)"]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/preference(key:value:)":{"type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"preference","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"K"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"K"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI13PreferenceKeyP5ValueQa","text":"Value"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"url":"\/documentation\/composablearchitecture\/ifletstore\/preference(key:value:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/preference(key:value:)","title":"preference(key:value:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","role":"collectionGroup","kind":"article","title":"View Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}]}}}