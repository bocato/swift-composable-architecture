{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"nonisolated","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lineLimit","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"limit"},{"kind":"text","text":": "},{"text":"PartialRangeFrom","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeFromV"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"},{"text":"\n","kind":"text"}]}]}],"metadata":{"title":"lineLimit(_:)","symbolKind":"method","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"roleHeading":"Instance Method","externalID":"s:7SwiftUI4ViewPAAE9lineLimityQrs16PartialRangeFromVySiGF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lineLimit","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s16PartialRangeFromV","kind":"typeIdentifier","text":"PartialRangeFrom"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"platforms":[{"name":"iOS","unavailable":false,"introducedAt":"16.0","beta":false,"deprecated":false},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false,"name":"macOS"},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"16.0"},{"deprecated":false,"introducedAt":"9.0","name":"watchOS","beta":false,"unavailable":false}],"role":"symbol","extendedModule":"SwiftUICore"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/lineLimit(_:)-2i97f"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"View.lineLimit(_:)"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/linelimit(_:)-2i97f"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/lineLimit(_:)-2i97f":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/lineLimit(_:)-2i97f","abstract":[],"title":"lineLimit(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lineLimit","kind":"identifier"},{"text":"(","kind":"text"},{"text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"role":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/ifletstore\/linelimit(_:)-2i97f"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","role":"collectionGroup","kind":"article","title":"View Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}]}}}