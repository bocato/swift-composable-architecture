{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartScrollPosition(x:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"title":"chartScrollPosition(x:)","externalID":"s:7SwiftUI4ViewP6ChartsE19chartScrollPosition1xQrAA7BindingVyqd__G_tAD9PlottableRd__lF::SYNTHESIZED::s:22ComposableArchitecture10IfLetStoreV","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"chartScrollPosition","kind":"identifier"},{"text":"(","kind":"text"},{"text":"x","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding"},{"text":"<some ","kind":"text"},{"kind":"typeIdentifier","text":"Plottable","preciseIdentifier":"s:6Charts9PlottableP"},{"text":">) -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}],"platforms":[{"deprecated":false,"introducedAt":"17.0","unavailable":false,"name":"iOS","beta":false},{"name":"macOS","beta":false,"introducedAt":"14.0","unavailable":false,"deprecated":false},{"beta":false,"deprecated":false,"name":"tvOS","introducedAt":"17.0","unavailable":false},{"deprecated":false,"name":"watchOS","beta":false,"unavailable":false,"introducedAt":"10.0"}],"role":"symbol","extendedModule":"SwiftUICore"},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"code":"View.chartScrollPosition(x:)","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"chartScrollPosition","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<some ","kind":"text"},{"text":"Plottable","kind":"typeIdentifier","preciseIdentifier":"s:6Charts9PlottableP"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/ifletstore\/chartscrollposition(x:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/ifletstore\/view-implementations","role":"collectionGroup","kind":"article","title":"View Implementations","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/View-Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore/chartScrollPosition(x:)":{"url":"\/documentation\/composablearchitecture\/ifletstore\/chartscrollposition(x:)","type":"topic","title":"chartScrollPosition(x:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"chartScrollPosition","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier"},{"kind":"text","text":"<some "},{"preciseIdentifier":"s:6Charts9PlottableP","kind":"typeIdentifier","text":"Plottable"},{"text":">) -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore\/chartScrollPosition(x:)","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"title":"IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}]}}}