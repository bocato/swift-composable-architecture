{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"chartScrollPosition"},{"kind":"text","text":"("},{"text":"x","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI7BindingV","kind":"typeIdentifier","text":"Binding"},{"kind":"text","text":"<some "},{"kind":"typeIdentifier","text":"Plottable","preciseIdentifier":"s:6Charts9PlottableP"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"text":"\n","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"metadata":{"symbolKind":"method","externalID":"s:7SwiftUI4ViewP6ChartsE19chartScrollPosition1xQrAA7BindingVyqd__G_tAD9PlottableRd__lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","platforms":[{"introducedAt":"17.0","deprecated":false,"unavailable":false,"beta":false,"name":"iOS"},{"deprecated":false,"unavailable":false,"name":"macOS","introducedAt":"14.0","beta":false},{"introducedAt":"17.0","deprecated":false,"unavailable":false,"beta":false,"name":"tvOS"},{"unavailable":false,"deprecated":false,"introducedAt":"10.0","name":"watchOS","beta":false}],"extendedModule":"SwiftUICore","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartScrollPosition","kind":"identifier"},{"kind":"text","text":"("},{"text":"x","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<some ","kind":"text"},{"preciseIdentifier":"s:6Charts9PlottableP","text":"Plottable","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"title":"chartScrollPosition(x:)","role":"symbol"},"kind":"symbol","variants":[{"paths":["\/documentation\/composablearchitecture\/switchstore\/chartscrollposition(x:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/chartScrollPosition(x:)"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.chartScrollPosition(x:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"text":" views.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"title":"SwitchStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/chartScrollPosition(x:)":{"abstract":[],"url":"\/documentation\/composablearchitecture\/switchstore\/chartscrollposition(x:)","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/chartScrollPosition(x:)","kind":"symbol","title":"chartScrollPosition(x:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"chartScrollPosition","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"text":"Binding","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI7BindingV"},{"text":"<some ","kind":"text"},{"preciseIdentifier":"s:6Charts9PlottableP","text":"Plottable","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","abstract":[],"title":"View Implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}