{"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"navigationDestination","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Action"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"store"},{"kind":"text","text":": "},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","kind":"typeIdentifier","text":"PresentationAction"},{"text":"<","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">>, "},{"text":"state","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DestinationState"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"action"},{"kind":"text","text":": ("},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Action"},{"text":", ","kind":"text"},{"text":"destination","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"}],"extendedModule":"SwiftUICore","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7SwiftUI4ViewP22ComposableArchitectureE21navigationDestination5store5state6action11destinationQrAD5StoreCyAD17PresentationStateVyqd__GAD0M6ActionOyqd_0_GG_qd_1_Sgqd__cqd_0_qd_2_cqd_3_AKyqd_1_qd_2_GctAaBRd_3_r3_lF::SYNTHESIZED::s:22ComposableArchitecture11SwitchStoreV","title":"navigationDestination(store:state:action:destination:)","role":"symbol","modules":[{"name":"ComposableArchitecture","relatedModules":["SwiftUICore"]}],"platforms":[{"deprecatedAt":"9999.0","unavailable":false,"name":"iOS","message":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs","deprecated":false,"introducedAt":"16.0","beta":false},{"deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false,"name":"macOS","message":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs","deprecatedAt":"9999.0"},{"introducedAt":"16.0","deprecated":false,"beta":false,"message":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs","deprecatedAt":"9999.0","name":"tvOS","unavailable":false},{"deprecated":false,"unavailable":false,"deprecatedAt":"9999.0","message":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs","name":"watchOS","beta":false,"introducedAt":"9.0"}]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/navigationDestination(store:state:action:destination:)","interfaceLanguage":"swift"},"abstract":[{"text":"Associates a destination view with a store that can be used to push the view onto a","type":"text"},{"type":"text","text":" "},{"code":"NavigationStack","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Further scope the store into the 'state' and 'action' cases, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.5#Enum-driven-navigation-APIs"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/switchstore\/navigationdestination(store:state:action:destination:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"kind":"text","text":" "},{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"navigationDestination"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"State"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationState"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"DestinationAction"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Destination"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"store"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"PresentationAction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">>, "},{"kind":"externalParam","text":"state"},{"text":" ","kind":"text"},{"text":"toDestinationState","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DestinationState"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"action"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fromDestinationAction"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"@","kind":"attribute"},{"text":"ViewBuilder","kind":"attribute","preciseIdentifier":"s:7SwiftUI11ViewBuilderV"},{"text":" ","kind":"text"},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Destination"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Destination","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"text":"\n","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"store","content":[{"inlineContent":[{"type":"text","text":"A store that is focused on "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","isActive":true},{"text":" for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a screen. When "},{"type":"codeVoice","code":"store"},{"text":"‘s state is non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", the system passes a store of unwrapped","type":"text"},{"text":" ","type":"text"},{"code":"State","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Action","type":"codeVoice"},{"text":" to the modifier’s closure. You use this store to power the content","type":"text"},{"type":"text","text":" "},{"type":"text","text":"in a view that the system pushes onto the navigation stack. If "},{"code":"store","type":"codeVoice"},{"text":"’s state is","type":"text"},{"text":" ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":"-ed out, the system pops the view from the stack.","type":"text"}],"type":"paragraph"}]},{"name":"toDestinationState","content":[{"type":"paragraph","inlineContent":[{"text":"A transformation to extract screen state from the presentation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"state."}]}]},{"name":"fromDestinationAction","content":[{"inlineContent":[{"text":"A transformation to embed screen actions into the presentation","type":"text"},{"text":" ","type":"text"},{"text":"action.","type":"text"}],"type":"paragraph"}]},{"name":"destination","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure returning the content of the destination view."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"content":[{"inlineContent":[{"type":"text","text":"This is a Composable Architecture-friendly version of SwiftUI’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"navigationDestination(isPresented:)"},{"type":"text","text":" view modifier."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"role":"symbol","url":"\/documentation\/composablearchitecture\/switchstore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true},{"text":" views.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SwitchStore"}],"title":"SwitchStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"title":"CaseLet","url":"\/documentation\/composablearchitecture\/caselet","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"CaseLet","kind":"identifier"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CaseLet"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationAction"}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction","title":"PresentationAction"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PresentationState","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper for state that can be presented."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","kind":"symbol","navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate","title":"PresentationState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/navigationDestination(store:state:action:destination:)":{"role":"symbol","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"Associates a destination view with a store that can be used to push the view onto a"},{"text":" ","type":"text"},{"code":"NavigationStack","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/navigationDestination(store:state:action:destination:)","title":"navigationDestination(store:state:action:destination:)","url":"\/documentation\/composablearchitecture\/switchstore\/navigationdestination(store:state:action:destination:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"navigationDestination"},{"kind":"text","text":"<"},{"text":"State","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Action","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"DestinationState"},{"text":", ","kind":"text"},{"text":"DestinationAction","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Destination","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"store","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","text":"PresentationState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture18PresentationActionO","text":"PresentationAction"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Action"},{"text":">>, ","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": ("},{"text":"State","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DestinationState"},{"kind":"text","text":"?, "},{"text":"action","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"DestinationAction"},{"kind":"text","text":") -> "},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"destination","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"text":"DestinationState","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"DestinationAction","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Destination","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP","text":"View"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"url":"\/documentation\/composablearchitecture\/swiftuideprecations","role":"collectionGroup","kind":"article","title":"Deprecations","abstract":[{"type":"text","text":"Review unsupported SwiftUI APIs and their replacements."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"text":"around to views that need to interact with the application.","type":"text"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/store","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"navigatorTitle":[{"text":"Store","kind":"identifier"}],"kind":"symbol","title":"Store","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/switchstore\/view-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore\/View-Implementations","abstract":[],"title":"View Implementations","type":"topic"}}}