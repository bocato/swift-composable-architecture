{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/exhaustivity\/off(showskippedassertions:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity"]]},"metadata":{"title":"Exhaustivity.off(showSkippedAssertions:)","externalID":"s:22ComposableArchitecture12ExhaustivityO3offyACSb_tcACmF","roleHeading":"Case","symbolKind":"case","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"off","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"showSkippedAssertions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"role":"symbol"},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off(showSkippedAssertions:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Non-exhaustive assertions."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"off","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"showSkippedAssertions"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"showSkippedAssertions","content":[{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":", skipped assertions will be reported as"},{"type":"text","text":" "},{"type":"text","text":"expected failures."}]}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This settings allows you to assert on any subset of state changes and actions received from","type":"text"},{"text":" ","type":"text"},{"text":"effects.","type":"text"}]},{"inlineContent":[{"text":"When configured to ","type":"text"},{"code":"showSkippedAssertions","type":"codeVoice"},{"text":", any state not asserted on or received actions","type":"text"},{"type":"text","text":" "},{"text":"skipped will be reported in a grey informational box next to the assertion. This is handy for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"when you want non-exhaustivity but you still want to know what all you are missing from your"},{"type":"text","text":" "},{"type":"text","text":"assertions."}],"type":"paragraph"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity":{"url":"\/documentation\/composablearchitecture\/exhaustivity","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity","abstract":[{"type":"text","text":"The exhaustivity of assertions made by the test store."}],"kind":"symbol","title":"Exhaustivity","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Exhaustivity"}],"navigatorTitle":[{"kind":"identifier","text":"Exhaustivity"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/off(showSkippedAssertions:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off(showSkippedAssertions:)","type":"topic","url":"\/documentation\/composablearchitecture\/exhaustivity\/off(showskippedassertions:)","title":"Exhaustivity.off(showSkippedAssertions:)","abstract":[{"text":"Non-exhaustive assertions.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"off","kind":"identifier"},{"text":"(","kind":"text"},{"text":"showSkippedAssertions","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"kind":"symbol","title":"exhaustivity","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"exhaustivity","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","title":"TestStore","role":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"type":"topic"}}}