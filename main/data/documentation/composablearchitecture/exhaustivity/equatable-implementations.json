{"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/Equatable-Implementations","interfaceLanguage":"swift"},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/exhaustivity\/equatable-implementations"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"role":"collectionGroup","modules":[{"name":"ComposableArchitecture"}],"title":"Equatable Implementations","roleHeading":"API Collection"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity"]]},"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/!=(_:_:)"],"anchor":"Operators","title":"Operators","generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","title":"TestStore","role":"symbol","navigatorTitle":[{"text":"TestStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/teststore","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestStore","kind":"identifier"}],"abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"kind":"symbol","title":"exhaustivity","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"exhaustivity","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","text":"Exhaustivity"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/!=(_:_:)":{"url":"\/documentation\/composablearchitecture\/exhaustivity\/!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","title":"!=(_:_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/!=(_:_:)","abstract":[],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity":{"url":"\/documentation\/composablearchitecture\/exhaustivity","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity","abstract":[{"type":"text","text":"The exhaustivity of assertions made by the test store."}],"kind":"symbol","title":"Exhaustivity","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Exhaustivity"}],"navigatorTitle":[{"kind":"identifier","text":"Exhaustivity"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"}}}