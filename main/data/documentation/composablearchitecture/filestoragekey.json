{"topicSections":[{"title":"Storing a value","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"],"anchor":"Storing-a-value"},{"anchor":"Overriding-storage","title":"Overriding storage","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultFileStorage","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage"]},{"anchor":"Deprecations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()"],"title":"Deprecations"},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/id"],"generated":true},{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/load(initialValue:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/save(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/subscribe(initialValue:didSet:)"]},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/PersistenceReaderKey-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations","generated":true}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"FileStorageKey","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"text":"Use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)"},{"type":"text","text":" to create values of this type."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"],"generated":true,"anchor":"Persistence-strategies","title":"Persistence strategies"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/filestoragekey"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A type defining a file persistence strategy","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FileStorageKey","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"symbolKind":"class","modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture14FileStorageKeyC","title":"FileStorageKey","role":"symbol"},"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"url":"\/documentation\/composablearchitecture\/filestoragekey","abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileStorageKey"}],"kind":"symbol","title":"FileStorageKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey/PersistenceReaderKey-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/PersistenceReaderKey-Implementations","title":"PersistenceReaderKey Implementations","url":"\/documentation\/composablearchitecture\/filestoragekey\/persistencereaderkey-implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryFileStorage()":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/inmemoryfilestorage()","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"InMemoryFileStorage","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","kind":"typeIdentifier","text":"FileStorage"}],"kind":"symbol","title":"InMemoryFileStorage()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorage":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorage","title":"FileStorage","url":"\/documentation\/composablearchitecture\/filestorage","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FileStorage","kind":"identifier"}],"abstract":[{"text":"A type that encapsulates saving and loading data from disk.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FileStorage"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LiveFileStorage()":{"deprecated":true,"url":"\/documentation\/composablearchitecture\/livefilestorage()","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"LiveFileStorage","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV","text":"FileStorage"}],"kind":"symbol","title":"LiveFileStorage()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey/load(initialValue:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/load(initialValue:)","title":"load(initialValue:)","url":"\/documentation\/composablearchitecture\/filestoragekey\/load(initialvalue:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"navigatorTitle":[{"text":"PersistenceReaderKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey","abstract":[{"text":"A type that can load and subscribe to state in an external system.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceReaderKey"}],"kind":"symbol","title":"PersistenceReaderKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","title":"Sharing state","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/fileStorage(_:decoder:encoder:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","title":"fileStorage(_:decoder:encoder:)","url":"\/documentation\/composablearchitecture\/persistencereaderkey\/filestorage(_:decoder:encoder:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fileStorage","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":", "},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Creates a persistence key that can read and write to a ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value in the file system."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AppStorageKey"}],"abstract":[{"text":"A type defining a user defaults persistence strategy.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKey"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","url":"\/documentation\/composablearchitecture\/appstoragekey","title":"AppStorageKey","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"navigatorTitle":[{"kind":"identifier","text":"PersistenceKey"}],"url":"\/documentation\/composablearchitecture\/persistencekey","abstract":[{"type":"text","text":"A type that can persist shared state to an external storage."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKey"}],"kind":"symbol","title":"PersistenceKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey/id":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/id","title":"id","url":"\/documentation\/composablearchitecture\/filestoragekey\/id","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyHashable","preciseIdentifier":"s:s11AnyHashableV"}],"abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey/save(_:)":{"url":"\/documentation\/composablearchitecture\/filestoragekey\/save(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"save","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"text":")","kind":"text"}],"kind":"symbol","title":"save(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/save(_:)","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","title":"InMemoryKey","url":"\/documentation\/composablearchitecture\/inmemorykey","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"InMemoryKey","kind":"identifier"}],"abstract":[{"text":"A type defining an in-memory persistence strategy","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"InMemoryKey"}]},"doc://ComposableArchitecture/s8SendableP":{"identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/defaultFileStorage":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/defaultFileStorage","title":"defaultFileStorage","url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/defaultfilestorage","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"defaultFileStorage","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FileStorage","preciseIdentifier":"s:22ComposableArchitecture11FileStorageV"}],"abstract":[{"type":"text","text":"Default file storage used by "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/fileStorage(_:decoder:encoder:)","isActive":true},{"text":".","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey/subscribe(initialValue:didSet:)":{"url":"\/documentation\/composablearchitecture\/filestoragekey\/subscribe(initialvalue:didset:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subscribe"},{"kind":"text","text":"("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"didSet"},{"kind":"text","text":": ("},{"text":"Value","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Shared","preciseIdentifier":"s:22ComposableArchitecture6SharedV"},{"kind":"text","text":"<"},{"text":"Value","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture6SharedV12SubscriptionC","text":"Subscription"}],"kind":"symbol","title":"subscribe(initialValue:didSet:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey\/subscribe(initialValue:didSet:)","role":"symbol","type":"topic"}}}