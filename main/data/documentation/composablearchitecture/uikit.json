{"seeAlsoSections":[{"title":"Integrations","generated":true,"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport"],"anchor":"Integrations"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/uikit"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Combine integration","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisher","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/publisher"],"anchor":"Combine-integration"}],"kind":"article","metadata":{"role":"collectionGroup","roleHeading":"API Collection","modules":[{"name":"ComposableArchitecture"}],"title":"UIKit Integration"},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"While the Composable Architecture was designed with SwiftUI in mind, it comes with tools to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"integrate into application code written in UIKit."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"},"sections":[],"abstract":[{"type":"text","text":"Integrating the Composable Architecture into a UIKit application."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","role":"collectionGroup","kind":"article","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","title":"Adopting Swift concurrency","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftconcurrency","abstract":[{"type":"text","text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency."}],"role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","url":"\/documentation\/composablearchitecture\/observationbackport","title":"Observation backport","role":"article","abstract":[{"text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,","type":"text"},{"type":"text","text":" "},{"text":"as well as the caveats of using the backported tools.","type":"text"}],"type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/publisher":{"abstract":[{"text":"A publisher that emits when state changes.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/publisher","url":"\/documentation\/composablearchitecture\/store\/publisher","title":"publisher","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV","text":"StorePublisher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"State"},{"text":">","kind":"text"}],"type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore/publisher":{"title":"publisher","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore\/publisher","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"publisher","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture14StorePublisherV","kind":"typeIdentifier","text":"StorePublisher"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ViewState"},{"text":">","kind":"text"}],"deprecated":true,"abstract":[{"text":"A publisher that emits when state changes.","type":"text"}],"url":"\/documentation\/composablearchitecture\/viewstore\/publisher","type":"topic","role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store/ifLet(then:else:)":{"title":"ifLet(then:else:)","type":"topic","url":"\/documentation\/composablearchitecture\/store\/iflet(then:else:)","abstract":[{"text":"Calls one of two closures depending on whether a store’s optional state is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" or not, and"},{"type":"text","text":" "},{"text":"whenever this condition changes for as long as the cancellable lives.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ifLet"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":">("},{"text":"then","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Wrapped"},{"text":", ","kind":"text"},{"text":"Action","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"text":"else","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> any ","kind":"text"},{"text":"Cancellable","kind":"typeIdentifier","preciseIdentifier":"s:7Combine11CancellableP"}],"deprecated":true,"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store\/ifLet(then:else:)"}}}