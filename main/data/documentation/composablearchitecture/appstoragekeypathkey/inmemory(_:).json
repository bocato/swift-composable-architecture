{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/appstoragekeypathkey\/inmemory(_:)"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/PersistenceReaderKey-Implementations"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/PersistenceReaderKey-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"inMemory","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture11InMemoryKeyV","text":"InMemoryKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Value"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A string key identifying a value to share in memory."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An in-memory persistence key.","type":"text"}]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"For example, one could initialize a key with the date and time at which the application was","type":"text"},{"type":"text","text":" "},{"text":"most recently launched, and access this date from anywhere using the ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"reference","isActive":true},{"text":" property","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"wrapper:"}]},{"type":"codeListing","code":["@Shared(.inMemory(\"appLaunchedAt\")) var appLaunchedAt = Date()"],"syntax":"swift"}],"kind":"content"}],"sections":[],"metadata":{"roleHeading":"Type Method","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"extendedModule":"ComposableArchitecture","symbolKind":"method","externalID":"s:22ComposableArchitecture20PersistenceReaderKeyPAAE8inMemoryyAA02IngE0Vyqd__GSSAGRszs8SendableRd__lFZ::SYNTHESIZED::s:22ComposableArchitecture017AppStorageKeyPathE0V","title":"inMemory(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"inMemory","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/inMemory(_:)"},"kind":"symbol","abstract":[{"type":"text","text":"Creates a persistence key for sharing data in-memory for the lifetime of an application."}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AppStorageKey"}],"abstract":[{"text":"A type defining a user defaults persistence strategy.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKey"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","url":"\/documentation\/composablearchitecture\/appstoragekey","title":"AppStorageKey","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","title":"Sharing state","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AppStorageKeyPathKey"}],"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","title":"AppStorageKeyPathKey","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","title":"InMemoryKey","url":"\/documentation\/composablearchitecture\/inmemorykey","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"InMemoryKey","kind":"identifier"}],"abstract":[{"text":"A type defining an in-memory persistence strategy","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"InMemoryKey"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/inMemory(_:)":{"url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/inmemory(_:)","type":"topic","title":"inMemory(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"inMemory","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/inMemory(_:)","kind":"symbol","abstract":[{"type":"text","text":"Creates a persistence key for sharing data in-memory for the lifetime of an application."}],"role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey/PersistenceReaderKey-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey\/PersistenceReaderKey-Implementations","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey\/persistencereaderkey-implementations","kind":"article","title":"PersistenceReaderKey Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"title":"Shared","abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"topic","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/shared"}}}