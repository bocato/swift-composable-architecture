{"variants":[{"paths":["\/documentation\/composablearchitecture\/persistencekey"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"navigatorTitle":[{"text":"PersistenceKey","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"protocol","role":"symbol","title":"PersistenceKey","externalID":"s:22ComposableArchitecture14PersistenceKeyP","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKey"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared"],"generated":true,"anchor":"Sharing-state","title":"Sharing state"}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey\/save(_:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","doc:\/\/ComposableArchitecture\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault"],"title":"Conforming Types","type":"conformingTypes"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"A type that can persist shared state to an external storage."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PersistenceKey","kind":"identifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa","text":"Value","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","text":"PersistenceReaderKey","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conform to this protocol to express persistence to some external storage by describing how to"},{"type":"text","text":" "},{"type":"text","text":"save to and load from the external storage, and providing a stream of values that represents"},{"type":"text","text":" "},{"text":"when the external storage is changed from the outside. It is only necessary to conform to this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"protocol if the "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey"},{"text":", or ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","isActive":true,"type":"reference"},{"text":" strategies are not","type":"text"},{"type":"text","text":" "},{"text":"sufficient for your use case.","type":"text"}]},{"inlineContent":[{"type":"text","text":"See the article "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","type":"reference","isActive":true},{"text":" for more information, in particular the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence","type":"reference","isActive":true},{"type":"text","text":" section."}],"type":"paragraph"}]}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKeyDefault":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKeyDefault","title":"PersistenceKeyDefault","type":"topic","url":"\/documentation\/composablearchitecture\/persistencekeydefault","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceKeyDefault"}],"navigatorTitle":[{"text":"PersistenceKeyDefault","kind":"identifier"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"text":" conforms to ","type":"text"},{"code":"PersistenceKey","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"A persistence key that provides a default value to an existing persistence key."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"kind":"article","abstract":[{"type":"text","text":"Learn techniques for sharing state throughout many parts of your application, and how to persist"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","url":"\/documentation\/composablearchitecture\/sharingstate","title":"Sharing state","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey":{"navigatorTitle":[{"text":"PersistenceReaderKey","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/persistencereaderkey","abstract":[{"text":"A type that can load and subscribe to state in an external system.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistenceReaderKey"}],"kind":"symbol","title":"PersistenceReaderKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKey":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AppStorageKey"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/appstoragekey","role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"abstract":[{"text":"A type defining a user defaults persistence strategy.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"AppStorageKey"}],"title":"AppStorageKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKey"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Shared":{"title":"Shared","abstract":[{"type":"text","text":"A property wrapper type that shares a value with multiple parts of an application."}],"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Shared","type":"topic","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/shared"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"navigatorTitle":[{"text":"Effect","kind":"identifier"}],"type":"topic","title":"Effect","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/composablearchitecture\/effect","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Effect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","url":"\/documentation\/composablearchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"text":" ","type":"text"},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryKey":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryKey","title":"InMemoryKey","url":"\/documentation\/composablearchitecture\/inmemorykey","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"InMemoryKey","kind":"identifier"}],"abstract":[{"text":"A type defining an in-memory persistence strategy","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"InMemoryKey"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey/save(_:)":{"abstract":[{"type":"text","text":"Saves a value to storage."}],"type":"topic","title":"save(_:)","role":"symbol","required":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"save","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:22ComposableArchitecture20PersistenceReaderKeyP5ValueQa"},{"kind":"text","text":")"}],"url":"\/documentation\/composablearchitecture\/persistencekey\/save(_:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey\/save(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","title":"AppStorageKeyPathKey","type":"topic","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppStorageKeyPathKey"}],"navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"role":"symbol","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Copyable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Escapable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState#Custom-persistence":{"type":"topic","kind":"section","title":"Custom persistence","url":"\/documentation\/composablearchitecture\/sharingstate#Custom-persistence","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState#Custom-persistence"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceKey":{"navigatorTitle":[{"kind":"identifier","text":"PersistenceKey"}],"url":"\/documentation\/composablearchitecture\/persistencekey","abstract":[{"type":"text","text":"A type that can persist shared state to an external storage."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistenceKey"}],"kind":"symbol","title":"PersistenceKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceKey","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FileStorageKey":{"navigatorTitle":[{"kind":"identifier","text":"FileStorageKey"}],"url":"\/documentation\/composablearchitecture\/filestoragekey","abstract":[{"type":"text","text":"A type defining a file persistence strategy"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileStorageKey"}],"kind":"symbol","title":"FileStorageKey","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FileStorageKey","role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PersistenceReaderKey/Value":{"abstract":[{"type":"text","text":"A type that can be loaded or subscribed to in an external system."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PersistenceReaderKey\/Value","title":"Value","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"role":"symbol","type":"topic","required":true,"url":"\/documentation\/composablearchitecture\/persistencereaderkey\/value","kind":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","abstract":[{"text":"A protocol that describes how to evolve the current state of an application to the next state,","type":"text"},{"type":"text","text":" "},{"text":"given an action, and describes what ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","type":"reference","isActive":true},{"text":"s should be executed later by the store, if any.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reducer","kind":"identifier"}],"title":"Reducer","navigatorTitle":[{"text":"Reducer","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/reducer","role":"symbol"}}}